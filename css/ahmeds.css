/*
---GRID---
Instructions
All CSS declarations and media queries in this
file should strictly target the "grid" div and
its content in the index.html file.

You're limited to the below stated:
--------------------------
Mandatory declaration
¤ display: grid;                            | Only grid
--------------------------
Permitted media queries
¤ @media screen and (min-width: 768px) {    |
¤ @media screen and (min-width: 1024px) {   |
--------------------------
Permitted properties
¤ display                                   | Only grid
¤ font-weight                               |
¤ grid-column                               |
¤ grid-gap                                  |
¤ grid-row                                  |
¤ grid-template-columns                     |
¤ grid-template-rows                        |
¤ order                                     |
¤ place-content                             |
--------------------------

Student CSS below the line
-------------------------- */


.grid > div:nth-child(6) {
    grid-column: 1 / -1;
}
.grid>div {
    display: grid;
    place-content: center;
}



.grid>div:nth-child(1)>p, 
.grid>div:nth-child(4)>p, 
.grid>div:nth-child(6)>p {
    font-weight: bold;
}

.grid > div:nth-child(6) {
    grid-column: 1 / -1;
}

.grid > div:nth-child(4) {
    grid-column: 1 / -1;
}

.grid > div:nth-child(1),
.grid > div:nth-child(4),
.grid > div:nth-child(6),
.grid > div:nth-child(8) {
    grid-column: 1 / -1;
}

@media screen and (min-width: 1024px) { 
    
    .grid {
        display: grid;
        grid-template-columns: 2fr 5fr 70px 7fr;
        grid-template-rows: 70px 1fr 1fr 60px;
        grid-gap: 16px;
        
    }

    /*YOU */
    .grid > div:nth-child(1) {
        grid-column: 2 / 3;
        grid-row: 3 / 4;
    }

    .grid > div:nth-child(2) {
        grid-column: 3 / 4;
        grid-row: 1 / 2;
    }

    .grid > div:nth-child(3) {
        grid-column: 4 / 5;
        grid-row: 1 / 1;
    }

    /*know*/
    .grid > div:nth-child(4) {
        grid-column: 5 / 4;
        grid-row: 3 / 6;
        
    }
   

    .grid > div:nth-child(5) {
        grid-column: 1 / 1;
        grid-row: 3/ 3;
    }

    /*Grid */
    .grid > div:nth-child(6) {
        grid-column: 1 / 3;
        grid-row: 1 / 3;
    }

    .grid > div:nth-child(7) {
        grid-column: 3 / 4;
        grid-row: 3 / 6;
    }

    .grid > div:nth-child(8) {
        grid-column: 1 / 3;
        grid-row: 5 / 5; 
    }

    .grid > div:nth-child(9) {
        grid-column: 1 / 3;
        grid-row: 4 / 4; 
    }

    .grid > div:nth-child(10) {
        grid-column: 5 / 3;
        grid-row: 2 / 2;
    }
}



@media screen and (min-width: 768px) {


    .grid {
        display: grid;
        grid-template-columns: 2fr 5fr 70px 7fr;
        grid-template-rows: 80px 1.1fr 1fr 60px;
        grid-gap: 16px;
        
    }

    /*YOU */
    .grid > div:nth-child(1) {
        grid-column: 2 / 3;
        grid-row: 3 / 4;
    }

    .grid > div:nth-child(2) {
        grid-column: 3 / 4;
        grid-row: 1 / 2;
    }

    .grid > div:nth-child(3) {
        grid-column: 4 / 5;
        grid-row: 1 / 1;
    }

    /*know*/
    .grid > div:nth-child(4) {
        grid-column: 1 / 3;
        grid-row: 1 / 3;
    }

    .grid > div:nth-child(5) {
        grid-column: 1 / 1;
        grid-row: 3/ 3;
    }

    /*Grid */
    .grid >div:nth-child(6) {
        grid-column: 4 / 5;
        grid-row: 3 / 6;
    }

    .grid > div:nth-child(7) {
        grid-column: 3 / 4;
        grid-row: 3 / 6;
    }

    .grid > div:nth-child(8) {
        grid-column: 1 / 3;
        grid-row: 5 / 5; 
    }

    .grid > div:nth-child(9) {
        grid-column: 1 / 3;
        grid-row: 4 / 4; 
    }

    .grid > div:nth-child(10) {
        grid-column: 5 / 3;
        grid-row: 2 / 2;
    }
}




@media screen and (min-width: 1024px) {
       /*know*/
       .grid > div:nth-child(6) {
        grid-column: 1 / 3;
        grid-row: 1 / 3;
    }
      /*Grid */
      .grid >div:nth-child(4) {
        grid-column: 4 / 5;
        grid-row: 3 / 6;
    }
}